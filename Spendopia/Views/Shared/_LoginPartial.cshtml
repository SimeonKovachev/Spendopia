@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    @{
    List<object> items = new List<object>();
    items.Add(new
    {
        text = "Dashboard",
        url ="/",
        iconCss = "fa-solid fa-box"
    });
    items.Add(new
    {
        text = "Notifications",
        url= "/",
        iconCss = "fa-solid fa-bell"
    });
    items.Add(new
    {
        text = "User Settings",
        url = "/Identity/Account/Manage/Index",
        iconCss = "fa-solid fa-gear"
    });
    items.Add(new
    {
        text = "Log Out",
        url= "/Identity/Account/Logout",
        iconCss = "fa-solid fa-right-from-bracket"
    });
}



@if (SignInManager.IsSignedIn(User))
{
        <ejs-dropdownbutton id="profiledropdown" class="btn text-white" content="Profile" items="items" iconCss="fa-solid fa-user   "></ejs-dropdownbutton>
        <i class="fa-solid fa-message"></i>
@*      <img class="profile-pic" src="~/profile.jpg" />*@
   
       @* <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
   
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>*@
    
}
else
{
        <a class="btn btn-auth text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
  
        <a class="btn btn-auth text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
}